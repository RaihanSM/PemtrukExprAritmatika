//Nomor 3 Evaluasi Aritmatika

//Sample ekspresi 0 : 7+8*4				=> 39
//Sample ekspresi 1 : 12*5+7-(23+2)/5-4			=> 58
//Sample ekspresi 2 : (9-3)*8/4-12			=> 0
//Sample ekspresi 3 : (19-10)/3*8-5+27			=> 46
//Sample ekspresi 4 : (8*(10-3)-6)/10			=> 5
//Sample ekspresi 5 : 9-10*7+15/3-10+8			=> -58
//Sample ekspresi 6 : 7/5				=> 1.4
//Sample ekspresi 7 : -(90/2) + -5 * 10 + 100/5		=> -75
//Sample ekspresi 8 : -(90/2) + -5 * 10 + 100/5		=> -75
//Sample ekspresi 9 : 1512%5				=> 2
//Sample ekspresi 10: -49 - 17 % 5 * 2			=> -53

#include <iostream>
#include <stack>
#include <ctype.h>
using namespace std;
long unsigned int i;

bool isVar(char b){
	if(b=='+'||b=='-'||b=='*'||b=='/'||b=='%')
		return true;
	return false;
}
int raft(char b){
	if(b=='+'||b=='-') return 1;
	if(b=='*'||b=='/'||b=='%') return 2;
	return 0;
}
double applyVar(double data1, double data2, char var){
    switch(var){
        case '+': return data1 + data2;
        case '-': return data1 - data2;
        case '*': return data1 * data2;
        case '/': return data1 / data2;
        }
    return 0;
}
void calculate(string data){
	stack<double> variabel;
	stack<char> op;
	
	for(i=0; i<data.length(); i++){
		if(isdigit(data[i])){
			int value=0;
			while(i<data.length() && isdigit(data[i])){
				value = (value*10) + (data[i] - '0');
				i++;
			}
			i--;
			variabel.push(value);
		}
		else if(data[i] == '(')
			op.push(data[i]);
		else if(data[i] == ')'){
			while(!op.empty() && op.top() != '('){
				if(op.top() == '%'){
					int value2 = variabel.top(); variabel.pop();
                    int value1 = variabel.top(); variabel.pop();
                    op.pop();
                    variabel.push(value1%value2);
				} else {
					double value2 = variabel.top(); variabel.pop();
                    double value1 = variabel.top(); variabel.pop();
                    char var = op.top(); op.pop();
                    variabel.push(applyVar(value1, value2, var));
				}
			}
			if(!op.empty())
				op.pop();
		} else {
			if(data[i] == '-'){
				if(i==0){
					if(isdigit(data[i+1])){
						i++;
						int value=0;
						while(i<data.length() && isdigit(data[i])){
							value = (value*10) + (data[i] - '0');
							i++;
						}
						i--;
						variabel.push(value*-1);
					} else {
						variabel.push(-1);
						op.push('*');
					}
				} else {
					while(!op.empty() && raft(op.top()) >= raft(data[i]) && !isVar(data[i-1])){
						if(op.top() == '%'){
							int value2 = variabel.top(); variabel.pop();
		                    int value1 = variabel.top(); variabel.pop();
		                    op.pop();
		                    variabel.push(value1%value2);
						} else {
							double value2 = variabel.top(); variabel.pop();
		                    double value1 = variabel.top(); variabel.pop();
		                    char var = op.top(); op.pop();
		                    variabel.push(applyVar(value1, value2, var));
						}
					}
					if((isdigit(data[i+1]) || data[i+1]=='(') && (isdigit(data[i-1]) || data[i-1]==')'))
						op.push(data[i]);
					else{
						variabel.push(-1);
						op.push('*');
					}
				} 
			} else {
				while(!op.empty() && raft(op.top()) >= raft(data[i])){
					if(op.top() == '%'){
						int value2 = variabel.top(); variabel.pop();
		                int value1 = variabel.top(); variabel.pop();
		                op.pop();
		                variabel.push(value1%value2);
					} else {
						double value2 = variabel.top(); variabel.pop();
		                double value1 = variabel.top(); variabel.pop();
		                char var = op.top(); op.pop();
		                variabel.push(applyVar(value1, value2, var));
					}
				}
				op.push(data[i]);
			}
		}
	}
	while(!op.empty()){
		if(op.top() == '%'){
			int value2 = variabel.top(); variabel.pop();
		    int value1 = variabel.top(); variabel.pop();
		    op.pop();
		    variabel.push(value1%value2);
		} else {
			double value2 = variabel.top(); variabel.pop();
		    double value1 = variabel.top(); variabel.pop();
		    char var = op.top(); op.pop();
		    variabel.push(applyVar(value1, value2, var));
		}
	}
	cout << variabel.top() << endl;
}

int main(){
	string ekspresi; getline(cin,ekspresi);
	string temp="";
	for(i=0;i<ekspresi.length();i++){
		if(ekspresi[i]==' ')
			continue;
		else
			temp+=ekspresi[i];
	}
	calculate(temp);
	return 0;
}
